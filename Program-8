# Round Robin Scheduling Algorithm Simulation

#include <stdio.h>

void roundrobin(int processes[], int n, int bt[], int quantum) {
    int rem_bt[n];
    for (int i = 0; i < n; i++)
        rem_bt[i] = bt[i];
    
    int t = 0;
    while (1) {
        int done = 1;
        for (int i = 0; i < n; i++) {
            if (rem_bt[i] > 0) {
                done = 0;
                if (rem_bt[i] > quantum) {
                    t += quantum;
                    rem_bt[i] -= quantum;
                } else {
                    t = t + rem_bt[i];
                    rem_bt[i] = 0;
                    printf("Process %d completed at time %d\n", processes[i], t);
                }
            }
        }
        if (done == 1)
            break;
    }
}

int main() {
    int processes[] = { 1, 2, 3 };
    int n = sizeof(processes) / sizeof(processes[0]);
    int burst_time[] = { 10, 5, 8 };
    int quantum = 4;

    roundrobin(processes, n, burst_time, quantum);
    return 0;
}
